AWSTemplateFormatVersion: 2010-09-09
Description: code build shield pipeline

Parameters:
  GitRepo:
    Type: String
  GitBranch:
    Type: String
  GitSecret:
    Type: String
  GitToken:
    Type: String
  GitOwner:
    Type: String
  BucketName:
    Type: String
    Default: artifacts
  ShieldKey:
    Type: String
    Default: shields
# Setup s3 Bucket where we keep our source
Resources:
  Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName: !Sub ${AWS::StackName}-${BucketName}

  ShieldBucketPolicy: 
    Type: AWS::S3::BucketPolicy
    Properties: 
      Bucket: !Ref Bucket
      PolicyDocument:
        Statement:
          - Action: 
            - "s3:GetObject"
            Effect: "Allow"
            Resource: 
              Fn::Join: 
                - ""
                - 
                  - "arn:aws:s3:::"
                  - 
                    Ref: Bucket
                  - "/shields/*"
            Principal: "*"
  # role that executes the pipeline process
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-PipelineRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service:
              - codepipeline.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-PipelinePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - cloudformation:*
                  - iam:PassRole
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                  - codebuild:StopBuild
                  - secretsmanager:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:*
                Resource: !Sub
                  - ${Bucket}/*
                  - { Bucket: !GetAtt Bucket.Arn }
  
  BuildStatusEventHandlerBuildRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-BuildStatusEventHandlerBuildRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service:
              - codebuild.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-BuildStatusEventHandlerBuildPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:*
                  - logs:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:*
                Resource: !Sub
                  - ${Bucket}/*
                  - { Bucket: !GetAtt Bucket.Arn }

  BuildStatusEventHandlerDeployRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub ${AWS::StackName}-BuildStatusEventHandlerDeployRole
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          Effect: Allow
          Principal:
            Service:
              - cloudformation.amazonaws.com
          Action:
            - sts:AssumeRole
      Policies:
        - PolicyName: !Sub ${AWS::StackName}-BuildStatusEventHandlerDeployPolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - coudformation:*
                  - logs:*
                  - lambda:*
                  - iam:*
                Resource: "*"
              - Effect: Allow
                Action:
                  - s3:*
                Resource: !Sub
                  - ${Bucket}/*
                  - { Bucket: !GetAtt Bucket.Arn }

  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub ${AWS::StackName}
      RestartExecutionOnUpdate: true
      RoleArn: !GetAtt PipelineRole.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref Bucket
      # Get the source
      Stages:
        - Name: Source
          Actions:
            - Name: Github
              RunOrder: 1
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitOwner
                Repo: !Ref GitRepo
                Branch: !Ref GitBranch
                OAuthToken: !Ref GitToken
                PollForSourceChanges: false
              OutputArtifacts:
              - Name: source
        - Name: Build
          Actions:
            - Name: BuildStatusEventHandler
              RunOrder: 1
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref BuildStatusEventHandlerCodeBuild
              InputArtifacts:
                - Name: source
              OutputArtifacts:
                - Name: statusEventHandler
        # - Name: Deploy
        #   Actions:
        #     - Name: BuildStatusEventHandler
        #       RunOrder: 1
        #       ActionTypeId:
        #         Category: Deploy
        #         Owner: AWS
        #         Provider: CloudFormation
        #         Version: 1
        #       Configuration:
        #         Action: CREATE_UPDATE
        #         StackName: !Sub ${AWS::StackName}-StatusEventHandler
        #         Capabilities: CAPABILITY_AUTO_EXPAND,CAPABILITY_IAM
        #         RoleArn: !GetAtt BuildStatusEventHandlerDeployRole.Arn
        #         ParameterOverrides: 
        #           Fn::Sub:
        #             - '{"Bucket":"${Bucket}", "Key": "${Key}"}'
        #             - Bucket: !Ref BucketName
        #               Key: !Ref ShieldKey
        #       InputArtifacts:
        #         - Name: statusEventHandler
        #     - Name: BuildStatusAssets
        #       RunOrder: 1
        #       ActionTypeId:
        #         Category: Deploy
        #         Owner: AWS
        #         Provider: S3
        #         Version: 1
        #       Configuration:
        #         S3Bucket: !Ref Bucket
        #         Extract: false
        #         ObjectKey: ShieldKey
        #       InputArtifacts:
        #         - Name: source

  BuildStatusEventHandlerCodeBuild:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub ${AWS::StackName}-BuildStatusEventHandler
      Description: Builds status event handler
      ServiceRole: !GetAtt BuildStatusEventHandlerBuildRole.Arn
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:2.0
        EnvironmentVariables:
          - Name: BUCKET
            Type: PLAINTEXT
            Value: !Ref Bucket
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: inf/builds/BuildStatusEventHandler.yml


  # Setup the webhook to keep track of changes
  PipelineWebHook:
    Type: AWS::CodePipeline::Webhook
    Properties:
      Name: !Sub ${AWS::StackName}-${GitRepo}-webHook
      Authentication: GITHUB_HMAC
      AuthenticationConfiguration:
        SecretToken: !Ref GitSecret
      RegisterWithThirdParty: true
      Filters:
        - JsonPath: $.ref
          MatchEquals: refs/heads/{Branch}
      TargetAction: Github
      TargetPipeline: !Ref Pipeline
      TargetPipelineVersion: 1
